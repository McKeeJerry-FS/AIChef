@page "/createmeal"
@using AIChef.Shared
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@inject NavigationManager navigationManager

<PageTitle>Meal Planner AI - Create Meal</PageTitle>

<div class="container mt-5">
	<div class="row">
		<div class="col">
			<h1>Create Meal</h1>
			<EditForm EditContext="@editContext">
				<div class="row gy-2">
					
					<div class="col-12">
						<label class="form-label">Meal Time:</label>
						<InputSelect @bind-Value="meal.mealTime" class="form-select">
							<option value="Breakfast">Breakfast</option>
							<option value="Lunch">Lunch</option>
							<option value="Dinner">Dinner</option>
							<option value="Dessert">Dessert</option>
						</InputSelect>
					</div>
					<div class="col-12">
						<label class="form-label">Ingredient</label>
						<InputText placeholder="Add Ingredient" maxlength="30" @bind-Value="meal.ingredient" class="form-control mb-2"></InputText>
					</div>
					<div class="col-12 gy-2">
						<button class="btn btn-outline-success" @onclick="AddIngredient">Add</button>
						<button class="btn btn-outline-danger" @onclick="ClearAllIngredients">Clear</button>
					</div>
					<div class="col-12 mt-3">
						<div class="table-responsive">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>Ingredients</th>
									</tr>
								</thead>
								<tbody>
									@foreach(var item in ingredients)
									{
										<tr class="">
											<td>
												@item.Description
											</td>
											<td class="text-end pe-3">
												<button class="btn btn-outline-danger" @onclick="() => RemoveIngredient(item.Id)"><i class="bi bi-trash-fill"></i></button>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
					<div class="col-12 mb-3">
						<button class="btn btn-success rounded" @onclick="HandleSubmit">Generate</button>
					</div>
				</div>
			</EditForm>
		</div>
	</div>
</div>


@code {
	private EditContext? editContext;
	private List<Ingredient> ingredients = new List<Ingredient>();

	private Meal meal = new();

	protected override void OnInitialized()
	{
		editContext = new(meal);
	}

	private class Meal
	{
		public string? mealTime { get; set; }
		public string? ingredient { get; set; }
	}

	private void AddIngredient()
	{
		if (!string.IsNullOrEmpty(meal.ingredient))
		{
			ingredients.Add(new Ingredient()
			{
				Id = Guid.NewGuid(),
				Description = meal.ingredient
			});
		}

		// clear the textbox
		meal.ingredient = string.Empty;
	}

	private void ClearAllIngredients()
	{
		ingredients.Clear();
	}

	private void RemoveIngredient(Guid id)
	{
		ingredients.Remove(ingredients.First(i => i.Id == id));
	}

	private void HandleSubmit()
	{
		navigationManager.NavigateTo("/mealideas");
	}
}
